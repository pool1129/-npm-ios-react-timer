name: ios-react-time-picker publish

on:
  push:
    branches: 
      - main

jobs:
  release:
    permissions:
      # 저장소의 컨텐츠에 대한 읽기 권한 부여
      contents: write
      # 풀 리퀘스트에 관련된 작업에 쓰기 권한 부여
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit message
        id: message
        run: echo "::set-output name=message::$(git log -1 --pretty=%B)"

      - name: Get version from commit message
        id: version
        run: |
          version=$(echo "${{ steps.get_commit_message.outputs.message }}" | grep -oP 'v\d+\.\d+\.\d+')
          echo "::set-output name=version::$version"

      - name: Checkout version
        run: |
          if [ -z "${{ steps.extract_version.outputs.version }}" ]; then
            echo "Version not found in commit message"
            exit 1
          fi

      # npm 배포를 위한 Node 설치
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: "20.3.0"

      # 인증토큰 .npmrc 파일에 설정
      - name: setup npm auth
        run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      # 깃허브 봇으로 package.json 파일 version 을 git tag 버전으로 업데이트
      - name: update package version
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag -d ${{ github.ref_name }} || true
          git push origin :refs/tags/${{ github.ref_name }} || true
          npm version ${{ steps.semver.outputs.version }}

      # 업데이트 버전 commit / push
      - name: commit updated package version
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[chore] update package version"
          branch: main

      # git tab 신규 생성
      - name: update git tag
        run: |
          git tag -f ${{ github.ref_name }}
          git push --force origin ${{ github.ref_name }}

      # npm의 access token을 사용해 배포
      - run: npm publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
